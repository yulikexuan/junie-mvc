import type { RuntimeExpressionContext, TestContext } from '../../types';
export interface ParsedParameters {
    queryParams: Record<string, string>;
    pathParams: Record<string, string | number>;
    headerParams: Record<string, string>;
}
export declare function getValueFromContext(value: any, ctx: TestContext | RuntimeExpressionContext): any;
export declare function replaceFakerVariablesInString(input: string, ctx: TestContext | RuntimeExpressionContext): any;
export declare function getFakeData(pointer: string, ctx: TestContext | RuntimeExpressionContext): any;
export declare function parseJson(objectToResolve: any, ctx: TestContext | RuntimeExpressionContext): any;
export declare function resolvePath(path?: string, pathParams?: Record<string, string | number | boolean>): string | undefined;
//# sourceMappingURL=get-value-from-context.d.ts.map